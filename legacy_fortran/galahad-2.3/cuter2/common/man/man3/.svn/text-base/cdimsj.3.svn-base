.\" @(#)cdimsj v1.0 11/2000;
.TH cdimsj 3M "17 Nov 2000"
.SH NAME
CDIMSJ \- CUTEr tool to determine number of nonzeros to store the
matrix of gradients of the objective function and constraints, in
sparse format.

The problem under consideration
consists in minimizing (or maximizing) an objective function
.EQ
f(x)
.EN
over all
.EQ
x
.EN
\(mo
.EQ
R sup n
.EN
subject to

general equations
.EQ
c sub i (x) ~=~ 0,
.EN
.EQ
~(i
.EN
\(mo
.EQ
left { 1 ,..., m sub E right } ),
.EN

general inequalities
.EQ
c sub i sup l (x) ~<=~ c sub i (x) ~<=~ c sub i sup u (x),
.EN
.EQ
~(i
.EN
\(mo
.EQ
left { m sub E + 1 ,..., m right }),
.EN

and simple bounds
.EQ
b sup l ~<=~ x ~<=~ b sup u.
.EN

The objective function is group-partially separable and all constraint functions are partially separable.

.SH SYNOPSIS
CALL CDIMSJ( NNZJ )
.SH DESCRIPTION
The CDIMSJ subroutine determines the number of nonzero elements
required to store the matrix of gradients of the objective function
and constraint functions for the problem decoded into OUTSDIF.d in the
constrained minimization case. The matrix is stored in sparse format.
.LP 
.SH ARGUMENTS
The arguments of CDIMSJ are as follows
.TP 5
.B NNZJ \fP[out] - integer
the number of nonzero elements in the matrix.
.LP
.SH AUTHORS
I. Bongartz, A.R. Conn, N.I.M. Gould, D. Orban and Ph.L. Toint
.SH "SEE ALSO"
\fICUTEr (and SifDec): A Constrained and Unconstrained Testing
Environment, revisited\fP,
   N.I.M. Gould, D. Orban and Ph.L. Toint,
   ACM TOMS, \fB29\fP:4, pp.373-394, 2003.

\fICUTE: Constrained and Unconstrained Testing Environment\fP,
I. Bongartz, A.R. Conn, N.I.M. Gould and Ph.L. Toint, 
TOMS, \fB21\fP:1, pp.123-160, 1995.

sifdecode(1).

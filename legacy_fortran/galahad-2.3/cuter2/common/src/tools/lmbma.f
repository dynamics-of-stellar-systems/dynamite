C     ( Last modified on 23 Dec 2000 at 22:01:38 )
      PROGRAM          LMBMA
C
C  LBFGS-B test driver for problems derived from SIF files.
C
C  Nick Gould, A. Sartenaer, Ph. Toint, for CGT Productions.
C  December 1995.
C
      INTEGER          NMAX  , MMAX , IOUT  , N , M , INPUT
      INTEGER          MSAVE , LW, I , MAXIT, MAXCLL
      INTEGER          IFLAG , ICALL , ITER, IPRINT, INSPEC
CS    REAL             F, GTOL
CD    DOUBLE PRECISION F, GTOL
CBIG  PARAMETER      ( NMAX = 100000, MMAX = 25 )
CMED  PARAMETER      ( NMAX =  10000, MMAX = 25 )
CTOY  PARAMETER      ( NMAX =   1000, MMAX = 25 )
CCUS  PARAMETER      ( NMAX =  50000, MMAX = 25 )
      PARAMETER      ( IOUT  = 6, MSAVE = 7 )
      PARAMETER      ( LW    = NMAX * ( 2 * MSAVE + 1 ) + 2 * MSAVE )
      PARAMETER      ( INPUT = 55, INSPEC = 46 )
CS    REAL             X     ( NMAX ), G     ( NMAX ), W     ( LW   )
CD    DOUBLE PRECISION X     ( NMAX ), G     ( NMAX ), W     ( LW   )
      CHARACTER * 10   XNAMES( NMAX ), PNAME
      INTRINSIC        ABS   , MAX
      REAL             CPU(2), CALLS( 4 )
      CHARACTER*60     TASK, CSAVE
      LOGICAL          LSAVE(4)
      INTEGER          ISBMIN, NBD(NMAX), IWA(3*NMAX), ISAVE(44)
CS    REAL             FACTR, DSAVE(29),
CD    DOUBLE PRECISION FACTR, DSAVE(29),
     +                 WA(2*MMAX*NMAX+4*NMAX+12*MMAX*MMAX+12*MMAX)
C
C  Open the Spec file for the method.
C
      OPEN( INSPEC, FILE = 'LBFGSB.SPC', FORM = 'FORMATTED',
     *      STATUS = 'OLD' )
      REWIND INSPEC
C
C  Read input Spec data.
C
C   M = the maximum number of variable metric correction used to define
C     the limited memory matrix.
C
C   FACTR determines the stopping criterion
C
C      (f^k - f^{k+1})/MAX{|f^k|,|f^{k+1}|,1} <= FACTR * epsmch
C
C      where epsmch is the machine precision which is automatically
C      generated by the code. 
C
C   IPRINT controls the frequency and type of output generated:
C      iprint<0    no output is generated;
C      iprint=0    print only one line at the last iteration;
C      0<iprint<99 print also f and |proj g| every iprint iterations;
C      iprint=99   print details of every iteration except n-vectors;
C      iprint=100  print also the changes of active set and final x;
C      iprint>100  print details of every iteration including x and g;
C      When iprint > 0, the file iterate.dat will be created to
C      summarize the iteration.
C
C   ISBMIN specifies the subspace minimization methods.
C      isbmin = 1  the direct method will be used,
C               2  the dual method will be used,
C               3  the conjugate gradient method will be used.
C
      READ ( INSPEC, 1000 ) M, FACTR, GTOL, IPRINT, ISBMIN, 
     *                      MAXIT, MAXCLL
C
C  Close input file.
C
      CLOSE ( INSPEC )
C
C  Open the relevant file.
C
      OPEN ( INPUT, FILE = 'OUTSDIF.d', FORM = 'FORMATTED', 
     *       STATUS = 'OLD' )
      REWIND INPUT
C
C  Set up SIF data.
C
      CALL USETUP( INPUT, IOUT, N, X, W, W( NMAX + 1 ), NMAX )
C
C  Obtain variable names.
C
      CALL UNAMES( N, PNAME, XNAMES )
C
C  Set up algorithmic input data.
C
      DO 10 I = 1, N
         NBD( I ) = 2
 10   CONTINUE
      TASK   = 'START'
      ICALL  = 0
      ITER   = 0
      IFLAG  = 0
C
C  Evaluate the initial function and gradient.
C
C      CALL UOFG( N, X, F, G, .TRUE. )
C
C  Reverse communication loop
C
   20 CONTINUE
C
C  Call the optimizer.
C
      CALL LBFGSB( N, M, X, W, W( NMAX + 1 ), NBD, F, G, FACTR,
     +             WA, IWA, TASK, IPRINT, ISBMIN, CSAVE, LSAVE,
     +             ISAVE, DSAVE )
C
C  Check exit conditions and prepare for re-entry.
C
      IF ( TASK( 1:2 ) .EQ. 'FG' ) THEN
         IF ( ICALL .LE. MAXCLL ) THEN
            ICALL = ICALL + 1
            CALL UOFG( N, X, F, G, .TRUE. )
            GO TO 20
         ELSE
            IFLAG = 2
         END IF
      END IF
      IF ( TASK( 1:5 ) .EQ. 'NEW_X' ) THEN
         IF ( DSAVE( 13 ) .LE. GTOL ) THEN
            TASK='STOP: NORM OF PROJECTED GRADIENT <= 1E-5'
            GO TO 20
         END IF
         IF ( ICALL .LE. MAXIT ) THEN
            ITER = ITER + 1
            GO TO 20
         ELSE
            IFLAG = 1
         END IF
      END IF
C
C  Terminal exit.
C
      CALL UREPRT( CALLS, CPU )
      IF ( TASK( 1:4 ) .EQ. 'CONV' )  IFLAG = 0
      IF ( TASK( 1:4 ) .EQ. 'ABNO' )  IFLAG = 3
      IF ( TASK( 1:5 ) .EQ. 'ERROR' ) IFLAG = 4
      WRITE ( IOUT, 2010 )
      DO 40 I = 1, N
         WRITE( IOUT, 2020 ) XNAMES( I ), X( I ), G( I )
   40 CONTINUE
      WRITE ( IOUT, 2000 ) PNAME, N, CALLS(1), CALLS(2), 
     *                     IFLAG, F, CPU(1), CPU(2) 
      CLOSE( INPUT  )
      STOP
C
C  Non-executable statements.
C
 1000 FORMAT( I10, /, D10.3, /, D10.3, /, I10, /, I10, /, I10, /, I10 )
 2000 FORMAT( /, 24('*'), ' CUTEr statistics ', 24('*') //
     *    ,' Code used               :  LBFGS-B',  /
     *    ,' Problem                 :  ', A10,    /
     *    ,' # variables             =      ', I10 /
     *    ,' # objective functions   =        ', F8.2 /
     *    ,' # objective gradients   =        ', F8.2 / 
     *     ' Exit code               =      ', I10 /
     *    ,' Final f                 = ', E15.7 /
     *    ,' Set up time             =      ', 0P, F10.2, ' seconds' /
     *     ' Solve time              =      ', 0P, F10.2, ' seconds' //
     *     66('*') / )
 2010 FORMAT( /, '                 X         G ' )
 2020 FORMAT(  1X, A10, 1P, 2D12.4 )
      END


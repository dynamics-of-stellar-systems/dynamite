.\" @(#)cfn v1.0 11/2000;
.TH cfn 3M "17 Nov 2000"
.SH NAME
CFN \- CUTEr tool to evaluate function and constraints values.
.SH SYNOPSIS
CALL CFN( N, M, X, F, LC, C )
.SH DESCRIPTION
The CFN subroutine evaluates the value of the objective function and
general constraint functions of the problem decoded from a SIF file by
the script \fIsifdecode\fP at the point X.

The problem under consideration
consists in minimizing (or maximizing) an objective function
.EQ
f(x)
.EN
over all
.EQ
x
.EN
\(mo
.EQ
R sup n
.EN
subject to

general equations
.EQ
c sub i (x) ~=~ 0,
.EN
.EQ
~(i
.EN
\(mo
.EQ
left { 1 ,..., m sub E right } ),
.EN

general inequalities
.EQ
c sub i sup l (x) ~<=~ c sub i (x) ~<=~ c sub i sup u (x),
.EN
.EQ
~(i
.EN
\(mo
.EQ
left { m sub E + 1 ,..., m right }),
.EN

and simple bounds
.EQ
b sup l ~<=~ x ~<=~ b sup u.
.EN

The objective function is group-partially separable and all constraint functions are partially separable.

.LP 
.SH ARGUMENTS
The arguments of CFN are as follows
.TP 5
.B N \fP[in] - integer
the number of variables for the problem,
.TP
.B M \fP[in] - integer
the total number of general constraints,
.TP
.B X \fP[in] - real/double precision
an array which gives the current estimate of the solution of the
problem,
.TP
.B F \fP[out] - real/double precision
the value of the objective function evaluated at X,
.TP
.B C \fP[out] - real/double precision
an array which gives the values of the general constraint functions
evaluated at X. The i-th component of C will contain the value of c_i
(x),
.TP
.B LC \fP[in] - integer
is the actual declared dimension of C, with LC no smaller than M.
.LP
.SH AUTHORS
I. Bongartz, A.R. Conn, N.I.M. Gould, D. Orban and Ph.L. Toint
.SH "SEE ALSO"
\fICUTEr (and SifDec): A Constrained and Unconstrained Testing
Environment, revisited\fP,
   N.I.M. Gould, D. Orban and Ph.L. Toint,
   ACM TOMS, \fB29\fP:4, pp.373-394, 2003.

\fICUTE: Constrained and Unconstrained Testing Environment\fP,
I. Bongartz, A.R. Conn, N.I.M. Gould and Ph.L. Toint, 
TOMS, \fB21\fP:1, pp.123-160, 1995.

ufn(3M), sifdecode(1).

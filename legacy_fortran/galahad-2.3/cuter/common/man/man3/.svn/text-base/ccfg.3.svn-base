.\" @(#)ccfg v1.0 11/2000;
.TH ccfg 3M "17 Nov 2000"
.SH NAME
CCFG \- CUTEr tool to evaluate constraint functions values and
possibly gradients.
.SH SYNOPSIS
CALL CCFG( N, M, X, LC, C, JTRANS, LCJAC1, LCJAC2, CJAC, GRAD )
.SH DESCRIPTION
The CCFG subroutine evaluates the values of the constraint functions of
the problem decoded from a SIF file by the script \fIsifdecode\fP at the
point X, and possibly their gradients. The problem under consideration
consists in minimizing (or maximizing) an objective function
.EQ
f(x)
.EN
over all
.EQ
x
.EN
\(mo
.EQ
R sup n
.EN
subject to

general equations
.EQ
c sub i (x) ~=~ 0,
.EN
.EQ
~(i
.EN
\(mo
.EQ
left { 1 ,..., m sub E right } ),
.EN

general inequalities
.EQ
c sub i sup l (x) ~<=~ c sub i (x) ~<=~ c sub i sup u (x),
.EN
.EQ
~(i
.EN
\(mo
.EQ
left { m sub E + 1 ,..., m right }),
.EN

and simple bounds
.EQ
b sup l ~<=~ x ~<=~ b sup u.
.EN

The objective function is group-partially separable and all constraint functions are partially separable.

.TE

.LP 
.SH ARGUMENTS
The arguments of CCFG are as follows
.TP 5
.B N \fP[in] - integer
the number of variables for the problem,
.TP 5
.B M \fP[in] - integer
the total number of general constraints,
.TP
.B X \fP[in] - real/double precision
an array which gives the current estimate of the solution of the
problem,
.TP
.B LC \fP[out] - integer
the actual declared dimension of C, with LC no smaller than M,
.TP
.B C \fP[out] - real/double precision
an array which gives the values of the general constraint functions
evaluated at X. The i-th component of C will contain the value of c_i
(x),
.TP
.B JTRANS \fP[in] - logical
a logical variable which should be set .TRUE. if the transpose of the
constraint Jacobian is required and .FALSE. if the Jacobian itself is
wanted. The Jacobian matrix is the matrix whose i-th row is the
gradient of the i-th constraint function,
.TP
.B LCJAC1 \fP[in] - integer
the actual declared size of the leading dimension of CJAC (with LCJAC1
no smaller than N if JTRANS is .TRUE. or M if JTRANS is .FALSE.),
.TP
.B LCJAC2 \fP[in] - integer
the actual declared size of the second dimension of CJAC (with LCJAC2
no smaller than M if JTRANS is .TRUE. or N if JTRANS is .FALSE.),
.TP
.B CJAC \fP[out] - real/double precision
a two-dimensional array of dimension (LCJAC1, LCJAC2) which gives the
value of the Jacobian matrix of the constraint functions, or its
transpose, evaluated at X. If JTRANS is .TRUE., the i,j-th component
of the array will contain the i-th derivative of the j-th constraint
function. Otherwise, if JTRANS is .FALSE., the i,j-th component of the
array will contain the j-th derivative of the i-th constraint
function,
.TP
.B GRAD \fP[in] - logical
a logical variable which should be set .TRUE. if the gradient of the
constraint functions are required and .FALSE. otherwise.
.LP
.SH AUTHORS
I. Bongartz, A.R. Conn, N.I.M. Gould, D. Orban and Ph.L. Toint
.SH "SEE ALSO"
\fICUTEr (and SifDec): A Constrained and Unconstrained Testing
Environment, revisited\fP,
   N.I.M. Gould, D. Orban and Ph.L. Toint,
   ACM TOMS, \fB29\fP:4, pp.373-394, 2003.

\fICUTE: Constrained and Unconstrained Testing Environment\fP,
I. Bongartz, A.R. Conn, N.I.M. Gould and Ph.L. Toint, 
TOMS, \fB21\fP:1, pp.123-160, 1995.

sifdecode(1)

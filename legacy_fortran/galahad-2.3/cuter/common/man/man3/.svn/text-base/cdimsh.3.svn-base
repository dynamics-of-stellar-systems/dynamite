.\" @(#)cdimsh v1.0 11/2000;
.TH cdimsh 3M "17 Nov 2000"
.SH NAME
CDIMSH \- CUTEr tool to determine number of nonzeros to store the
Hessian of the Lagrangian function for the problem decoded from a
SIF file by the script \fIsifdecode\fP.

The problem under consideration
consists in minimizing (or maximizing) an objective function
.EQ
f(x)
.EN
over all
.EQ
x
.EN
\(mo
.EQ
R sup n
.EN
subject to

general equations
.EQ
c sub i (x) ~=~ 0,
.EN
.EQ
~(i
.EN
\(mo
.EQ
left { 1 ,..., m sub E right } ),
.EN

general inequalities
.EQ
c sub i sup l (x) ~<=~ c sub i (x) ~<=~ c sub i sup u (x),
.EN
.EQ
~(i
.EN
\(mo
.EQ
left { m sub E + 1 ,..., m right }),
.EN

and simple bounds
.EQ
b sup l ~<=~ x ~<=~ b sup u.
.EN

The objective function is group-partially separable and all constraint functions are partially separable.

By convention, the signs of the Lagrange multipliers V are set so the
Lagrangian function can be written as
.EQ
L(X, V) = f(X) + < c(X), V >.
.EN
.SH SYNOPSIS
CALL CDIMSH( NNZH )
.SH DESCRIPTION
The CDIMSH subroutine determines the number of nonzero elements
required to store the Hessian matrix of the Lagrangian function for
the problem decoded into OUTSDIF.d in the constrained minimization
case. The matrix is stored in sparse "coordinate" format.
.LP 
.SH ARGUMENTS
The arguments of CDIMSH are as follows
.TP 5
.B NNZH \fP[out] - integer
the number of nonzero elements in the matrix.
.LP
.SH AUTHORS
I. Bongartz, A.R. Conn, N.I.M. Gould, D. Orban and Ph.L. Toint
.SH "SEE ALSO"
\fICUTEr (and SifDec): A Constrained and Unconstrained Testing
Environment, revisited\fP,
   N.I.M. Gould, D. Orban and Ph.L. Toint,
   ACM TOMS, \fB29\fP:4, pp.373-394, 2003.

\fICUTE: Constrained and Unconstrained Testing Environment\fP,
I. Bongartz, A.R. Conn, N.I.M. Gould and Ph.L. Toint, 
TOMS, \fB21\fP:1, pp.123-160, 1995.

sifdecode(1).

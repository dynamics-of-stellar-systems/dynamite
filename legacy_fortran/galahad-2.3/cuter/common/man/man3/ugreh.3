.\" @(#)ugreh v1.0 11/2000;
.TH ugreh 3M "17 Nov 2000"
.SH NAME
UGREH \- CUTEr tool to evaluate the gradient and sparse Hessian matrix
in finite element format.
.SH SYNOPSIS
CALL UGREH( N, X, G, NE, IRNHI, LIRNHI, LE, IPRNHI, HI, LHI, IPRHI, BYROWS )
.SH DESCRIPTION
The UGREH subroutine evaluates the gradient and Hessian matrix of
the objective function of the problem decoded from a SIF file by the
script \fIsifdecode\fP at the point X. This Hessian matrix is stored
as a sparse matrix in finite element format

\fIH = sum H_i  (i=1,...,NE),\fP

where each square symmetric element \fIH_i\fP involves a small subset of the
rows of the Hessian matrix.

The problem under consideration
consists in minimizing (or maximizing) an objective function
.EQ
f(x)
.EN
over all
.EQ
x
.EN
\(mo
.EQ
R sup n
.EN
subject to the simple bounds
.EQ
b sup l ~<=~ x ~<=~ b sup u.
.EN
The objective function is group-partially separable.

.LP 
.SH ARGUMENTS
The arguments of UGREH are as follows
.TP 5
.B N \fP[in] - integer
the number of variables for the problem,
.TP
.B X \fP[in] - real/double precision
an array which gives the current estimate of the solution of the
problem,
.TP
.B G \fP[out] - real/double precision
an array which gives the value of the gradient of the objective
function evaluated at X
.TP
.B NE \fP[out] - integer
the number, ne, of "finite-elements" used,
.TP
.B IRNHI \fP[out] - integer
an array which holds a list of the row indices involved which each
element. Those for element i directly preceed those for element i+1, i
= 1, ..., NE-1. Since the elements are symmetric, IRNHI is also the
list of column indices involved with each element.
.TP
.B LIRNHI \fP[in] - integer
the actual declared dimension of IRNHI,
.TP
.B LE \fP[in] - integer
the actual declared dimensions of IPRNHI and IPRHI,
.TP
.B IPRNHI \fP[out] - integer
IPRNHI(i) points to the position in IRNHI of the first row index
involved with element number i: the row indices of element number i
are stored in IRNHI between the indices IPRNHI(i) and
IPRNHI(i+1)-1. IPRNHI(NE+1) points to the first empty location in
IRNHI,
.TP
.B HI \fP[out] - real/double precision
an array of the nonzeros in the upper triangle of H_i, evaluated at X
and stored by rows, or by columns. Those for element i directly
proceed those for element, i+1, i = 1, ..., NE-1. Element number i
contains the values stored between

HI( IPRHI(i) ) and HI( IPRHI(i+1)-1 )

and involves the rows/columns stored between

IRNHI( IPRNHI(i) ) and IRNHI( IPRNHI(i+1)-1 ).
.TP
.B LHI \fP[in] - integer
the actual declared dimension of HI,
.TP
.B IPRHI \fP[out] - integer
IPRHI(i) points to the position in HI of the first nonzero involved
with element number i: the values involved in element number i are
stored in HI between the indices IPRHI(i) and
IPRHI(i+1)-1. IPRHI(NE+1) points to the first empty location in HI,
.TP
.B BYROWS \fP[in] - logical
must be set to .TRUE. if the upper triangle of each H_i is to be
stored by rows, and to .FALSE. if it is to be stored by columns.
.LP
.SH NOTE
Calling this routine is more efficient than separate calls to UGR
and UEH.
.LP
.SH AUTHORS
I. Bongartz, A.R. Conn, N.I.M. Gould, D. Orban and Ph.L. Toint
.SH "SEE ALSO"
\fICUTEr (and SifDec): A Constrained and Unconstrained Testing
Environment, revisited\fP,
   N.I.M. Gould, D. Orban and Ph.L. Toint,
   ACM TOMS, \fB29\fP:4, pp.373-394, 2003.

\fICUTE: Constrained and Unconstrained Testing Environment\fP,
I. Bongartz, A.R. Conn, N.I.M. Gould and Ph.L. Toint, 
TOMS, \fB21\fP:1, pp.123-160, 1995.

csgreh(3M), sifdecode(1).

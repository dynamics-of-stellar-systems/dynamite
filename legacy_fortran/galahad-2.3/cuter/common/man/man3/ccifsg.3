.\" @(#)ccifsg v1.0 11/2000;
.TH ccifsg 3M "17 Nov 2000"
.SH NAME
CCIFSG \- CUTEr tool to evaluate a single constraint function value and
possibly gradient in sparse format.
.SH SYNOPSIS
CALL CCIFSG( N, ICON, X, CI, NNZSGC, LSGCI, SGCI, IVSGCI, GRAD )
.SH DESCRIPTION
The CCIFSG subroutine evaluates the value of a particular constraint
function of the problem decoded from a SIF file by the script \fIsifdecode\fP at the point X, and
possibly its gradient in the constrained minimization case. The
gradient is stored in sparse format. The problem under consideration
consists in minimizing (or maximizing) an objective function
.EQ
f(x)
.EN
over all
.EQ
x
.EN
\(mo
.EQ
R sup n
.EN
subject to

general equations
.EQ
c sub i (x) ~=~ 0,
.EN
.EQ
~(i
.EN
\(mo
.EQ
left { 1 ,..., m sub E right } ),
.EN

general inequalities
.EQ
c sub i sup l (x) ~<=~ c sub i (x) ~<=~ c sub i sup u (x),
.EN
.EQ
~(i
.EN
\(mo
.EQ
left { m sub E + 1 ,..., m right }),
.EN

and simple bounds
.EQ
b sup l ~<=~ x ~<=~ b sup u.
.EN

The objective function is group-partially separable and all constraint functions are partially separable.

.LP 
.SH ARGUMENTS
The arguments of CCIFSG are as follows
.TP 5
.B N \fP[in] - integer
the number of variables for the problem,
.TP 5
.B ICON \fP[in] - integer
the index of the constraint function to be evaluated,
.TP
.B X \fP[in] - real/double precision
an array which gives the current estimate of the solution of the
problem,
.TP
.B CI \fP[out] - real/double precision
the value of constraint function ICON at X,
.TP
.B NNZSGC \fP[out] - integer
the number of nonzeros in SGCI,
.TP
.B LSGCI \fP[in] - integer
the declared length of SGCI,
.TP
.B SGCI \fP[out] - real/double precision
an array which gives the nonzeros of the gradient of constraint
function ICON evaluated at X. The i-th entry of SGCI gives the value
of the derivative with respect to variable IVSGCI(i) of function
ICON. 
.TP
.B IVSGCI \fP[out] - integer
an array whose i-th component is the index of the variable with
respect to which SGCI(i) is the derivative,
.TP
.B GRAD \fP[in] - logical
a logical variable which should be set .TRUE. if the gradient of the
constraint functions are required and .FALSE. otherwise.
.LP
.SH AUTHORS
I. Bongartz, A.R. Conn, N.I.M. Gould, D. Orban and Ph.L. Toint
.SH "SEE ALSO"
\fICUTEr (and SifDec): A Constrained and Unconstrained Testing
Environment, revisited\fP,
   N.I.M. Gould, D. Orban and Ph.L. Toint,
   ACM TOMS, \fB29\fP:4, pp.373-394, 2003.

\fICUTE: Constrained and Unconstrained Testing Environment\fP,
I. Bongartz, A.R. Conn, N.I.M. Gould and Ph.L. Toint, 
TOMS, \fB21\fP:1, pp.123-160, 1995.

sifdecode(1)

.\" @(#)cgrdh v1.0 11/2000;
.TH cgrdh 3M "17 Nov 2000"
.SH NAME
CGRDH \- CUTEr tool to evaluate constraints gradients, Hessian of
Lagrangian function and gradient of objective/Lagrangian function.
.SH SYNOPSIS
CALL CGRDH( N, M, X, GRLAGF, LV, V, G, JTRANS, LCJAC1, LCJAC2, CJAC, LH1, H )
.SH DESCRIPTION
The CGRDH subroutine evaluates the gradients of the general
constraints and of either the objective function or the Lagrangian
corresponding to the problem decoded from a SIF file by the script
\fIsifdecode\fP at the point X. It also evaluates the Hessian matrix
of the Lagrangian function at X. The gradients and matrices are
stored in a dense format.

The problem under consideration
consists in minimizing (or maximizing) an objective function
.EQ
f(x)
.EN
over all
.EQ
x
.EN
\(mo
.EQ
R sup n
.EN
subject to

general equations
.EQ
c sub i (x) ~=~ 0,
.EN
.EQ
~(i
.EN
\(mo
.EQ
left { 1 ,..., m sub E right } ),
.EN

general inequalities
.EQ
c sub i sup l (x) ~<=~ c sub i (x) ~<=~ c sub i sup u (x),
.EN
.EQ
~(i
.EN
\(mo
.EQ
left { m sub E + 1 ,..., m right }),
.EN

and simple bounds
.EQ
b sup l ~<=~ x ~<=~ b sup u.
.EN

The objective function is group-partially separable and all constraint functions are partially separable.

By convention, the signs of the Lagrange multipliers V are set so the
Lagrangian function can be written as
.EQ
L(X, V) = f(X) + < c(X), V >.
.EN
.LP 
.SH ARGUMENTS
The arguments of CGRDH are as follows
.TP 5
.B N \fP[in] - integer
the number of variables for the problem,
.TP
.B M \fP[in] - integer
the total number of general constraints,
.TP
.B X \fP[in] - real/double precision
an array which gives the current estimate of the solution of the
problem,
.TP
.B GRLAGF \fP[in] - logical
a logical variable which should be set .TRUE. if the gradient of the
Lagrangian function is required and .FALSE. if the gradient of the
objective function is sought,
.TP
.B LV \fP[in] - integer
the actual declared dimension of V,
.TP
.B V \fP[in] - real/double precision
an array which should give the Lagrange multipliers whenever GRLAGF is
set .TRUE. but need not otherwise be set,
.TP
.B G \fP[out] - real/double precision
an array which gives the value of the gradient of the objective
function evaluated at X (GRLAGF = .FALSE.) or of the Lagrangian
function evaluated at X and V (GRLAGF = .TRUE.),
.TP
.B JTRANS \fP[in] - logical
a logical variable which should be set to .TRUE. if the transpose of
the constraint Jacobian is required and to .FALSE. if the Jacobian
itself is wanted. The Jacobian matrix is the matrix whose i-th row is
the gradient of the i-th constraint function,
.TP
.B LCJAC1 \fP[in] - integer
the actual declared size of the leading dimension of CJAC (with LCJAC1
no smaller than N if JTRANS is .TRUE. or M if JTRANS is .FALSE.),
.TP
.B LCJAC2 \fP[in] - integer
the actual declared size of the second dimension of CJAC (with LCJAC2
no smaller than M if JTRANS is .TRUE. or N if JTRANS is .FALSE.),
.TP
.B CJAC \fP[out] - real/double precision
a two-dimensional array of dimension (LCJAC1, LCJAC2) which gives the
value of the Jacobian matrix of the constraint functions, or its
transpose, evaluated at X. If JTRANS is .TRUE., the i,j-th component
of the array will contain the i-th derivative of the j-th constraint
function. Otherwise, if JTRANS is .FALSE., the i,j-th component of the
array will contain the j-th derivative of the i-th constraint
function.
.TP
.B LH1 \fP[in] - integer
the actual declared size of the leading dimension of H (with LH1 no
smaller than N),
.TP
.B H \fP[out] - real/double precision
a two-dimensional array which gives the value of the Hessian matrix of
the Lagrangian function evaluated at X and V.
.LP
.SH AUTHORS
I. Bongartz, A.R. Conn, N.I.M. Gould, D. Orban and Ph.L. Toint
.SH "SEE ALSO"
\fICUTEr (and SifDec): A Constrained and Unconstrained Testing
Environment, revisited\fP,
   N.I.M. Gould, D. Orban and Ph.L. Toint,
   ACM TOMS, \fB29\fP:4, pp.373-394, 2003.

\fICUTE: Constrained and Unconstrained Testing Environment\fP,
I. Bongartz, A.R. Conn, N.I.M. Gould and Ph.L. Toint, 
TOMS, \fB21\fP:1, pp.123-160, 1995.

ugrdh(3M), sifdecode(1).

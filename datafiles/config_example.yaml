# Example configuration file config_example.yaml
---
system_components:

    black_hole: # ignore these descriptive names in config reader, just instantiate objets defined by type
        parameters:
            mass:
                desc: "log(BHmass)"
                par_generator_settings:
                    lo: 5.0
                    hi: 9.0
                    step: 0.5
                    minstep: 0.2
                fixed: True
                value: 6.0
                LaTeX: "$M_{BH}$"
                sformat: "%6.2f"
            radius:
                desc: "BH radius"
                par_generator_settings:
                    lo: 0.0
                    hi: 2.0
                    step: 0.3
                    minstep: 0.1
                gpe_parspace_settings:
                    kernel: "to be defined"
                fixed: True
                value: 1.0
                LaTeX: "$C$"
                sformat: "%6.2f"
        type: "Plummer" # class name, can be: Plummer, needs to correspond to th class name -> instantiated automatically
        include: True
        contributes_to_potential: True

    gas:
        parameters:
            one: 1
        type: "VisibleComponent" # class name
        include: False
        contributes_to_potential: True

    stars:
        parameters:
            q:
                desc: "intrinsic flattening (C/A)"
                par_generator_settings:
                    lo: 0.05
                    hi: 0.99
                    step: 0.04
                    minstep: 0.02
                fixed: False
                value: 0.99
                LaTeX: "$q_{min}$"
                sformat: "%6.2f"
            p:
            # par1:
                desc: "intrinsic B/A"
                gpe_parspace_settings:
                    kernel: "to be defined"
                par_generator_settings:
                    lo: 0.99
                    hi: 0.999
                    step: 0.02
                    minstep: 0.01
                fixed: False
                value: 0.99
                LaTeX: "$p_{min}$"
                sformat: "%6.3f"
            u:
            # par2:
                desc: "sigma_obs / sigma_intrinsic"
                par_generator_settings:
                    lo: 0.95
                    hi: 1.0
                    step: 0.01
                    minstep: 0.01
                fixed: False
                value: 0.9999
                LaTeX: "$u_{min}$"
                sformat: "%7.4f"
        type: "TriaxialVisibleComponent" # will need to correspond to the class name
        # type: "AxisymmetricVisibleComponent" # will need to correspond to the class name
        mge_file: "datafiles/mge.ecvs"
        include: True
        contributes_to_potential: True
        kinematics: # optional, only specified for components that have kinematics
            "narrow-field mode":
                weight: 0.6                       # weight of kinematics data specified by name
                type: GaussHermite                # specifies which object class to create
                datafile: "datafiles/gauss_hermite_kins.ecvs"  # for both discrete and integrated types (actual example file)
                aperturefile: aperture.dat      # integrated only (actual example file)
                binfile: bins.dat               # integrated only (actual example file)
                maskfile: maskfile.dat          # made-up filename
                PSF: kinpsffile.dat             # may be there, too (PSFs apply to any Data class object)
            "narrow-field mode2":
                weight: 0.4                       # weight of kinematics data specified by name
                type: GaussHermite    # only for type integrated! This is the class name in data.py
                datafile: "datafiles/gauss_hermite_kins.ecvs"  # for both discrete and integrated types (actual example file)
                aperturefile: aperture2.dat      # integrated only (actual example file)
                binfile: bins2.dat               # integrated only (actual example file)
                maskfile: maskfile2.dat          # made-up filename
                PSF: kinpsffile2.dat             # may be there, too (PSFs apply to any Data class object)
        populations: # optional, components may have population data, all data below is dummy data
            pop1:
                weight: 0.7                       # weight of population data specified by name
                type: integrated                # or discrete (then there is no parametrization)
                datafile: pop_data.dat          # for both discrete and integrated types
                aperturefile: popaperture.dat   # integrated only
                binfile: popbins.dat            # integrated only
                maskfile: popmaskfile.dat       # made-up filename
                PSF: poppsffile.dat             # may be there, too (PSFs apply to any Data class object)
            pop2:
                weight: 0.3                       # weight of population data specified by name
                type: integrated                # or discrete (then there is no parametrization)
                datafile: pop_data2.dat          # for both discrete and integrated types
                aperturefile: popaperture2.dat   # integrated only
                binfile: popbins2.dat            # integrated only
                maskfile: popmaskfile2.dat       # made-up filename
                PSF: poppsffile2.dat             # may be there, too (PSFs apply to any Data class object)

    dark_halo:
        parameters:
            dc:
                desc: "NFW Darkmatter concentrion (in log)"
                par_generator_settings:
                    lo: 0.0
                    hi: 2.0
                    step: 0.3
                    minstep: 0.1
                fixed: True
                value: 1.0
                LaTeX: "$log(C)$"
                sformat: "%6.2f"
            f:
                desc: "NFW Darkmatter fraction (in log)"
                par_generator_settings:
                    lo: 1.5
                    hi: 3.0
                    step: 0.4
                    minstep: 0.2
                fixed: False
                value: 2.0
                LaTeX: "$log(M_{200}/M_{star})$"
                sformat: "%6.2f"
        type: NFW
        include: True
        contributes_to_potential: True

    globular_clusters:
        type: "VisibleComponent"
        include: False
        contributes_to_potential: True

system_parameters: # these go into the physical system as a standalone atribute (i.e., not one of the components)
    ml:
        desc: "M/L"
        par_generator_settings:
            lo: 0.8
            hi: 7.5
            step: 1.0
            minstep: 0.5
        fixed: False
        value: 3.0
        LaTeX: "$Y_{r}$"
        sformat: "%6.2f"

system_attributes:
    distMPc: 38.82
    name: "NGC4210"
    position_angle: 97.69

orblib_settings: # don't put in physical system -> settings object
    nE: 21
    logrmin: -0.307153
    logrmax: 1.89192
    nI2: 10
    nI3: 7
    dithering: 3

parameter_space_settings: # don't put in physical system -> settings object
#    generator_type: "gaussian_process_emulator"
    generator_type: "GridSearch"
    stopping_criteria: TBD

io_settings:
    directory: "outputs/"
    setting1: True
    setting2: False

weight_solver_settings:
    type: "LegacyWeightSolver"
    setting1: True
    setting2: False


# end
